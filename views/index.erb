<style>
.tooltip {
    position: absolute;
    background: #de8;
    border-radius: 20px;
    padding: 5px 15px;
    box-shadow: 1px 1px 3px;
    text-align: left;
}

.tooltip h3 {
    font-size: 16px;
}

.tooltip h5 {
    font-size: 14px;
}
.tooltip .error, .tooltip .failure {
    border-left: 3px solid red;
    padding-left: 10px;
    margin-left: 10px;
}

.tooltip .failure {
    border-color: orange;
}
</style>

<script>

  d3.select("body")
      .append("div")
      .attr("class", "tooltip")
      .style("opacity", 0);

  var onMouseOver = function(data) {
        // Update tooltip content
    var content  = "<h5>" + data.name+ "</h5>";

        d3.select(".tooltip").html(content);

        if (data.result != "pass") {
            content += "<div class='error'>";
            content += "    <h5>" + "Error:"+ "</h5>";
            content += "    <pre>" + "Specific failure msg" + "</pre>";
            content += "</div>";
        }

    // Display tooltip
    d3.select(".tooltip")
      .transition()
        .duration(200)
        .style("opacity", 1);
  }

  var onMouseMove = function() {
    d3.select(".tooltip")
      .style("left", (d3.event.pageX + 5) + "px")
      .style("top",  (d3.event.pageY + 5) + "px");
  }

  var onMouseOut = function() {
    d3.select(".tooltip").style("opacity", 0);
  }

  function update(data) {
      var boxHeight = 50;
      var boxWidth = 50;
      var spacer = 2;

      var numPerRow = 20;

      d3.select("svg")
             .remove();

            var svg = d3.select('body')
                .append('svg')
                .attr('width', ((boxWidth+spacer) * numPerRow))
                .attr('height', 1000)
                .append("g")


      var idx = 0;
      var y = 0;

      // red : bd2c00
      // green: 8cc665

      var boxes = svg.selectAll("rect")
                           .data(data)
                           .enter()
                              .append("g")
                              .append("rect")
                              .attr("height", boxHeight)
                              .attr("width", boxWidth)
                              <%# .attr("style", "outline: thin solid lightgreen;") %>
                              .attr("fill", function(d){
                                  if(d.result == "pass"){
                                    return "#8cc665"
                                  }else{
                                    return "#bd2c00"
                                  }
                              })

                              .attr("transform",
                                    function(d){
                                      if(idx % numPerRow == 0){
                                        y += boxHeight + spacer;
                                      }
                                      return "translate(" + (boxWidth + spacer) * (idx += 1) + ", 0)";
                                    })
                              .on("mouseover", onMouseOver)
                              .on("mousemove", onMouseMove)
                              .on("mouseout", onMouseOut);


  }

  var url = 'http://localhost:9292/tests';

  setInterval(function() {

    d3.json(url, function(json){
        console.log("received: " + json);
        update(json);
      });

  }, 5000);

</script>



